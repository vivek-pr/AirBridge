apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airbridge.fullname" . }}-triggerer
spec:
  replicas: {{ .Values.triggerer.replicas }}
  selector:
    matchLabels:
      app: {{ include "airbridge.fullname" . }}-triggerer
  template:
    metadata:
      labels:
        app: {{ include "airbridge.fullname" . }}-triggerer
    spec:
      containers:
      - name: triggerer
        image: "{{ .Values.triggerer.image }}:{{ .Values.triggerer.tag }}"
        imagePullPolicy: {{ .Values.triggerer.pullPolicy }}
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: {{ .Values.airflow.executor | quote }}
        - name: AIRFLOW__API__EDGE__ENABLED
          value: {{ .Values.edgeApi.enabled | quote }}
{{- if .Values.edgeApi.tokenSecretName }}
        - name: EDGE_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.edgeApi.tokenSecretName }}
              key: token
{{- end }}
{{- if .Values.edgeApi.tokenSecretId }}
        - name: EDGE_API_TOKEN_ID
          value: {{ .Values.edgeApi.tokenSecretId | quote }}
{{- end }}
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: {{ printf "postgresql+psycopg2://%s:%s@%s-postgres:%d/%s" .Values.postgres.user .Values.postgres.password (include "airbridge.fullname" .) .Values.postgres.port .Values.postgres.db | quote }}
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: {{ printf "postgresql+psycopg2://%s:%s@%s-postgres:%d/%s" .Values.postgres.user .Values.postgres.password (include "airbridge.fullname" .) .Values.postgres.port .Values.postgres.db | quote }}
        livenessProbe:
          exec:
            command: ["bash", "-c", "airflow jobs check --job-type TriggererJob"]
          initialDelaySeconds: 30   # let it boot & migrate
          periodSeconds: 10
          timeoutSeconds: 10        # not 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command: ["bash", "-c", "airflow jobs check --job-type TriggererJob"]
          initialDelaySeconds: 30   # let it boot & migrate
          periodSeconds: 10
          timeoutSeconds: 10        # not 1
          failureThreshold: 6
        volumeMounts:
        - name: airflow-config
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg
{{- if .Values.dags.persistence.enabled }}
        - name: dags
          mountPath: {{ .Values.dags.path }}
{{- end }}
{{- if and .Values.dagSync.enabled (eq .Values.dagSync.mode "sidecar") }}
{{ include "airbridge.dagSync.container" . | indent 6 }}
{{- end }}
      volumes:
      - name: airflow-config
        configMap:
          name: {{ include "airbridge.fullname" . }}-config
{{- if .Values.dags.persistence.enabled }}
      - name: dags
        persistentVolumeClaim:
          claimName: {{ include "airbridge.fullname" . }}-dags
{{- end }}
